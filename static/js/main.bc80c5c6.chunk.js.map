{"version":3,"sources":["Movie.js","MovieContext.js","MovieList.js","Nav.js","AddMovie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","name","price","MovieContext","createContext","MovieProvider","props","useState","id","movies","setMovies","Provider","value","children","MovieList","useContext","map","movie","Nav","length","AddMovie","setName","setPrice","onSubmit","e","preventDefault","prevMovies","type","onChange","target","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAYeA,EAVD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACnB,OACI,gCACI,6BAAKD,IACL,4BAAIC,QCJHC,EAAeC,0BAGfC,EAAgB,SAACC,GAC1B,MAA4BC,mBAAS,CACjC,CACIN,KAAK,eACLC,MAAO,MACPM,GAAI,OAER,CACIP,KAAK,kBACLC,MAAO,MACPM,GAAI,SAER,CACIP,KAAK,YACLC,MAAO,MACPM,GAAI,SAdZ,mBAAOC,EAAP,KAAeC,EAAf,KAkBA,OACI,cAACP,EAAaQ,SAAd,CAAuBC,MAAO,CAACH,EAAQC,GAAvC,SACKJ,EAAMO,YCVJC,EAZG,WACd,MAA4BC,qBAAWZ,GAAvC,mBAAOM,EAAP,UACA,OACI,8BACKA,EAAOO,KAAI,SAAAC,GAAK,OACb,cAAC,EAAD,CAAOhB,KAAMgB,EAAMhB,KAAMC,MAAOe,EAAMf,OAAYe,EAAMT,UCMzDU,EAXH,WACR,MAA4BH,qBAAWZ,GAAvC,mBAAOM,EAAP,UACA,OACI,gCACI,uCACA,iDAAoBA,EAAOU,c,OCN1BC,EAAW,WACpB,MAAwBb,mBAAS,IAAjC,mBAAON,EAAP,KAAaoB,EAAb,KACA,EAA0Bd,mBAAS,IAAnC,mBAAOL,EAAP,KAAcoB,EAAd,KACA,EAA4BP,qBAAWZ,GAAvC,mBAAeO,GAAf,WAcA,OACI,uBAAMa,SANO,SAAAC,GACbA,EAAEC,iBACFf,GAAU,SAAAgB,GAAU,4BAAQA,GAAR,CAAoB,CAACzB,KAAMA,EAAMC,MAAOA,SAI5D,UACI,uBAAOyB,KAAK,OAAO1B,KAAK,OAAOW,MAAOX,EAAM2B,SAdjC,SAACJ,GAChBH,EAAQG,EAAEK,OAAOjB,UAcb,uBAAOe,KAAK,OAAO1B,KAAK,QAAQW,MAAOV,EAAO0B,SAZlC,SAACJ,GACjBF,EAASE,EAAEK,OAAOjB,UAYd,gDCNGkB,MAZf,WACE,OACE,cAAC,EAAD,UACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCAOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc80c5c6.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst Movie = ({ name, price }) => {\r\n    return (\r\n        <div>\r\n            <h3>{name}</h3>\r\n            <p>{price}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Movie","import React, {useState, createContext} from 'react'\r\n\r\nexport const MovieContext = createContext();\r\n\r\n//provide the information to the different components\r\nexport const MovieProvider = (props) => {\r\n    const [movies, setMovies] = useState([\r\n        {\r\n            name:'Harry Potter',\r\n            price: '$10',\r\n            id: 23124\r\n        },\r\n        {\r\n            name:'Game of Thrones',\r\n            price: '$10',\r\n            id: 2566124\r\n        },\r\n        {\r\n            name:'Inception',\r\n            price: '$10',\r\n            id: 23524\r\n        }\r\n    ]);\r\n\r\n    return (\r\n        <MovieContext.Provider value={[movies, setMovies]}>\r\n            {props.children}\r\n        </MovieContext.Provider>\r\n    )\r\n}","import React, {useState, useContext} from 'react'\r\nimport Movie from './Movie'\r\nimport {MovieContext} from './MovieContext' \r\n\r\nconst MovieList = () => {\r\n    const [movies, setMovies] = useContext(MovieContext);\r\n    return (\r\n        <div>\r\n            {movies.map(movie => (\r\n                <Movie name={movie.name} price={movie.price} key={movie.id}/>\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MovieList ","import React, {useContext} from 'react'\r\nimport { MovieContext } from './MovieContext';\r\n\r\n\r\nconst Nav = () => {\r\n    const [movies, setMovies] = useContext(MovieContext)\r\n    return (\r\n        <nav>\r\n            <h3>Alice</h3>\r\n            <p>List of Movies: {movies.length}</p>\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\nexport default Nav","import React, {useState, useContext} from 'react'\r\nimport { MovieContext } from './MovieContext';\r\n\r\nexport const AddMovie = () => {\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [movies, setMovies] = useContext(MovieContext);\r\n\r\n    const updateName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const updatePrice = (e) => {\r\n        setPrice(e.target.value);\r\n    }\r\n\r\n    const addMovie = e => {\r\n        e.preventDefault();\r\n        setMovies(prevMovies => [...prevMovies, {name: name, price: price}])\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addMovie}>\r\n            <input type=\"text\" name=\"name\" value={name} onChange={updateName}/>\r\n            <input type=\"text\" name=\"price\" value={price} onChange={updatePrice}/>\r\n            <button>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddMovie;\r\n","import './App.css';\nimport MovieList from './MovieList';\nimport Nav from './Nav';\nimport { MovieProvider } from './MovieContext';\nimport { AddMovie } from './AddMovie';\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <div className=\"App\">\n        <Nav />\n        <AddMovie />\n        <MovieList />\n      </div>\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}